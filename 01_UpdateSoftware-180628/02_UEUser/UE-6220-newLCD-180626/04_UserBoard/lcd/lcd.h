#ifndef __LCD_H
#define __LCD_H
#include "common.h"    //包含公共要素头文件
#include "gpio.h"      //包含gpio头文件
/******************************************************
接线方式
VCC=3.3V
GND=GND
PD5=RES
PD4=DC
PD1=CLK
PD2=MOSI
BLK,MISO可以不接
******************************************************/

#define LCD_RS    (PTD_NUM|2)    //LCD复位
#define LCD_DC    (PTD_NUM|1)    //LCD数据/命令
#define LCD_SCK   (PTC_NUM|5)    //LCD时钟
#define LCD_SDI   (PTC_NUM|7)    //LCD主出从入

//定义LCD的尺寸（240*320像素）
#define LCD_W 240    
#define LCD_H 320

//=====================================================================
//函数名称：Lcd_Init。
//函数返回：无
//参数说明：无
//功能概要：LCD初始化
//=====================================================================
void LCD_Init(void);    //LCD初始化

//=====================================================================
//函数名称：LCD_Clear
//函数返回：无
//参数说明：background:背景颜色（使用本文件后画笔颜色宏定义）
//功能概要：LCD清屏
//=====================================================================
void LCD_Clear(uint_16 background);    //LCD清屏

//=====================================================================
//函数名称：LCD_DrawPoint
//函数返回：无
//参数说明：x,y:点坐标(240*320),
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置画一个点
//=====================================================================
void LCD_DrawPoint(uint_16 x,uint_16 y,uint_16 color);    //画点

//=====================================================================
//函数名称：LCD_DrawPoint_big
//函数返回：无
//参数说明：x,y:点坐标(240*320)
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置画一个大点,大点的范围实际是一个以x-1,y-1为左上解，x+1,y+1为右下角的小矩形
//       包含9个点（3*3）的大点。
//=====================================================================
void LCD_DrawPoint_big(uint_16 x,uint_16 y,uint_16 color);    //画一个大点

//=====================================================================
//函数名称：Draw_Circle
//函数返回：无
//参数说明：x,y:中心点坐标(240*320),
//       r:圆的半径,
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置画一个指定大小的圆
//=====================================================================
void LCD_DrawCircle(uint_16 x,uint_16 y,uint_8 r,uint_16 color);  //画圆

//=====================================================================
//函数名称：LCD_DrawLine
//函数返回：无
//参数说明：x1,y1:起点坐标(240*320),x2,y2:终点坐标(240*320),
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定两点间画一条指定颜色的直线
//=====================================================================
void LCD_DrawLine(uint_16 x1,uint_16 y1,
	 uint_16 x2, uint_16 y2,uint_16 color);    //画线

//=====================================================================
//函数名称：LCD_DrawRectangle
//函数返回：无
//参数说明：x1,y1:左上角点坐标(240*320),x2,y2:右下角点坐标(240*320),
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定左上角与右下角画一个指定线条颜色的矩形
//=====================================================================
void LCD_DrawRectangle(uint_16 x1, uint_16 y1, 
     uint_16 x2, uint_16 y2,uint_16 color);    //画矩形

//=====================================================================
//函数名称：LCD_DrawSurface
//函数返回：无
//参数说明：x1,y1:起点坐标(240*320),x2,y2:终点坐标(240*320),
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：指定颜色填充矩形区域
//=====================================================================
void LCD_DrawSurface(uint_16 x1,uint_16 y1,
     uint_16 x2,uint_16 y2,uint_16 color);    //填充矩形区域

//=====================================================================
//函数名称：LCD_ShowChar
//函数返回：无
//参数说明：x,y:显示字符坐标(240*320),ch:要显示的字符,
//       mode:叠加方式(1)还是非叠加方式(0)，
//       color:字符颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置显示一个指定颜色的字符,mode=1不改变背景色显示字符，mode=0 背景为黑显示字符
//       字符大小为16*8
//=====================================================================
void LCD_ShowChar(uint_16 x,uint_16 y,uint_8 ch,
	 uint_8 mode,uint_16 color);    //显示一个指定颜色字符

//=====================================================================
//函数名称：LCD_ShowNum
//函数返回：无
//参数说明：x,y:起点坐标(240*320),len:数字显示的宽度,num:数值(0~4294967295)
//       color:字符颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置用指定颜色显示数字，len为显示宽度，当宽度少于数字位数时，高位丢失，当宽度大于数字
//       位数时补空格，数字以非叠加方式显示，即背景色为黑色
//=====================================================================
void LCD_ShowNum(uint_16 x,uint_16 y,uint_32 num,
	 uint_8 len,uint_16 color);    //显示数字

//=====================================================================
//函数名称：LCD_Show2Num。
//函数返回：无
//参数说明：x,y:起点坐标(240*320),len:数字显示的宽度,num:数值(0~65535),color:颜色
//功能概要：在指定位置用指定颜色显示数字，len为显示宽度，当宽度少于数字位数时，高位丢失，当宽度大于数字
//       位数时补'0'，数字以非叠加方式显示，即背景色为黑色
//=====================================================================
void LCD_Show2Num(uint_16 x,uint_16 y,uint_16 num,
	 uint_8 len,uint_16 color);    //显示数字

//=====================================================================
//函数名称：LCD_ShowCharactor
//函数返回：无
//参数说明：x,y:起点坐标(240*320),index：汉字在字库中的索引,fontcolor:字体颜色,
//       groundbackcolor:背景颜色，p:字库起始地址
//功能概要：在指定位置显示一个汉字(16*16大小),汉字需要自行从字库提取
//=====================================================================
void LCD_ShowCharactor(uint_16  x,uint_16 y,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);    //显示16*16汉字

//=====================================================================
//函数名称：LCD_ShowCharactor
//函数返回：无
//参数说明：x,y:起点坐标(240*320),index：汉字在字库中的索引,fontcolor:字体颜色,
//       groundbackcolor:背景颜色，p:字库起始地址
//功能概要：在指定位置显示一个汉字(32*32大小),使用16*16扩大为32*32
//=====================================================================
void LCD_ShowHugeCharactor(uint_16  x,uint_16 y,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);    //显示32*32汉字

//=====================================================================
//函数名称：LCD_ShowCharactor
//函数返回：无
//参数说明：x,y:起点坐标(240*320),index：汉字在字库中的索引,fontcolor:字体颜色,
//       groundbackcolor:背景颜色,p:字库起始地址
//功能概要：在指定位置显示一个汉字(32*32大小),汉字需要自行从字库提取
//=====================================================================
void LCD_Show32Charactor(uint_16  x,uint_16 y,uint_8 index,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);    //显示32*32汉字

//=====================================================================
//函数名称：LCD_Show16Charactor
//函数返回：无
//参数说明：x,y:起点坐标(240*320),index：汉字在字库中的索引,fontcolor:字体颜色,
//       groundbackcolor:背景颜色，p:字库起始地址
//功能概要：在指定位置显示一个汉字(16*16大小),汉字需要自行从字库提取
//=====================================================================
void LCD_Show16Charactor(uint_16  x,uint_16 y,uint_8 index,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);    //显示16*16汉字

//=====================================================================
//函数名称：LCD_ShowLetter
//函数返回：无
//参数说明：x,y:起点坐标(240*320),index：字符在字库中的索引,fontcolor:字体颜色,
//       groundbackcolor:背景颜色
//功能概要：在指定位置显示一个字母(32*32大小)
//=====================================================================
void LCD_ShowLetter(uint_16 x,uint_16 y,uint_8 index,uint_16 fontcolor,
	 uint_16 groundbackcolor);    //显示32*32英文字符

//=====================================================================
//函数名称：LCD_ShowStringA
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:字符串起始地址,color:字体颜色
//功能概要：在指定位置显示字符串，以非叠加方式显示
//=====================================================================
void LCD_ShowStringA(uint_16 x,uint_16 y,const uint_8 *p ,
		uint_16 color);    //显示字符串

//=====================================================================
//函数名称：LCD_ShowStringB
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:字符串起始地址,color:字体颜色
//功能概要：在指定位置显示字符串，以叠加方式显示
//=====================================================================
void LCD_ShowStringB(uint_16 x,uint_16 y,const uint_8 *p ,
		uint_16 color);    //显示字符串

//=====================================================================
//函数名称：LCD_ShowString
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:字符串起始地址（可以包含中文，但应包含在汉字字模中）
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置显示字符串，可指定显示画笔颜色和背景颜色。
//                   中文大小为（16*16）,英文大小为（8*16）
//=====================================================================
void LCD_ShowString(uint_16  x,uint_16 y,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);

//=====================================================================
//函数名称：LCD_ShowHugeString
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:字符串起始地址（可以包含中文，但应包含在汉字字模中）
//       color:颜色（使用本文件后画笔颜色宏定义）
//功能概要：在指定位置显示字符串，可指定显示画笔颜色和背景颜色。
//                   中文大小为（32*32）,英文大小为（16*32）
//=====================================================================
void LCD_ShowHugeString(uint_16  x,uint_16 y,uint_16 fontcolor,
	 uint_16 groundbackcolor,const uint_8 *p);

//=====================================================================
//函数名称：showimageA
//函数返回：无
//参数说明：x,y:起点坐标(240*320),width:图片宽度，height:图片高度，p:图片数组地址
//功能概要：在指定位置显示图片
//       未对图片超出显示窗口进行检查
//=====================================================================
void showimageA(uint_16 x,uint_16 y,uint_16 width,
	 uint_16 height,const uint_8 * p); //显示width*height大小的图片

//=====================================================================
//函数名称：showimage1
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:图片数组地址
//功能概要：在指定位置显示图片，图片的高度与宽度在图片数组中,图片数组前8字含义见结构HEADCOLOR。
//       未对图片超出显示窗口进行检查
//=====================================================================
void showimage1(uint_16 x,uint_16 y,const uint_8 *p);

//=====================================================================
//函数名称：showimageB
//函数返回：无
//参数说明：x,y:起点坐标(240*320),width,height图片宽高，p:图片数组地址
//       per:放大倍数,为整数
//功能概要：在指定位置，以放大倍数显示图片，有对图片超出显示窗口进行检查
//=====================================================================
void showimageB(uint_16 x,uint_16 y,uint_16 width,
		 uint_16 height,const uint_8 *p,uint_8 per); //显示放大per倍图片

//=====================================================================
//函数名称：showimage2
//函数返回：无
//参数说明：x,y:起点坐标(240*320),p:图片数组地址, per:放大倍数,为整数
//功能概要：在指定位置显示图片，图片的高度与宽度在图片数组中,图片数组前8字含义见结构HEADCOLOR。
//       以放大per倍显示图片，有对图片超出显示窗口进行检查
//=====================================================================
void showimage2(uint_16 x,uint_16 y,const uint_8 *p,uint_8 per);

//=====================================================================
//函数名称：buttonUp
//函数返回：无
//参数说明：x,y:左上坐标(240*320),x1,y1:右下角坐标(240*320)
//功能概要：在指定位置显示一个凸起的按钮
//=====================================================================
void buttonUp(int x,int y,int x1,int y1);    //凸起的按钮

//=====================================================================
//函数名称：buttonDown
//函数返回：无
//参数说明：x,y:左上坐标(240*320),x1,y1:右下角坐标(240*320)
//功能概要：在指定位置显示一个凹下的按钮
//=====================================================================
void buttonDown(int x,int y,int x1,int y1);    //凹下的按钮



// ------------------  汉字字模的数据结构定义 ------------------------ //
typedef struct typFNT_GB16                 // 汉字字模数据结构
{
       signed char Index[2];               // 汉字内码索引
       char Msk[32];                              // 点阵码数据
} typFNT_GB16;

//=====================================================================
//struct _HEADCOLOR
//scan: 扫描模式
//Bit7: 0:自左至右扫描，1:自右至左扫描。
//Bit6: 0:自顶至底扫描，1:自底至顶扫描。
//Bit5: 0:字节内象素数据从高位到低位排列，1:字节内象素数据从低位到高位排列。
//Bit4: 0:WORD类型高低位字节顺序与PC相同，1:WORD类型高低位字节顺序与PC相反。
//Bit3~2: 保留。
//Bit1~0: [00]水平扫描，[01]垂直扫描，[10]数据水平,字节垂直，[11]数据垂直,字节水平。
//gray: 灰度值
// 1:单色，2:四灰，4:十六灰，8:256色，12:4096色，16:16位彩色，24:24位彩色，32:32位彩色。
//w: 图像的宽度。
//h: 图像的高度。
//is565: 在4096色模式下为0表示使用[16bits(WORD)]格式，此时图像数据中每个WORD表示一个象素；
//为1表示使用[12bits(连续字节流)]格式，此时连续排列的每12Bits代表一个象素。
//在16位彩色模式下为0表示R G B颜色分量所占用的位数都为5Bits，为1表示R G B颜色分量所占用的位数
//分别为5Bits,6Bits,5Bits。
//在18位彩色模式下为0表示"6Bits in Low Byte"，为1表示"6Bits in High Byte"。
//在24位彩色和32位彩色模式下is565无效。
//rgb: 描述R G B颜色分量的排列顺序，rgb中每2Bits表示一种颜色分量，[00]表示空白，[01]表示
//Red，[10]表示Green，[11]表示Blue。
//=====================================================================
typedef struct _HEADCOLOR
{
   unsigned char scan;
   unsigned char gray;
   unsigned short w;
   unsigned short h;
   unsigned char is565;
   unsigned char rgb;
}HEADCOLOR;


void LCD_WR_DATA8(uint_8 da); //发送数据-8位参数
void Address_set(uint_16 x1,uint_16 y1,uint_16 x2,uint_16 y2);

//画笔颜色


#define WHITE       0xFFFF
#define BLACK       0x0000
#define BLUE        0x001F
#define BRED        0XF81F
#define GRED        0XFFE0
#define GBLUE       0X07FF
#define RED         0xF800
#define MAGENTA     0xF81F
#define GREEN       0x07E0
#define CYAN        0x7FFF
#define YELLOW      0xFFE0
#define BROWN       0XBC40  //棕色
#define BRRED       0XFC07  //棕红色
#define GRAY        0X8430  //灰色

//GUI颜色
#define DARKBLUE      0X01CF   //深蓝色
#define LIGHTBLUE     0X7D7C   //浅蓝色
#define GRAYBLUE      0X5458   //灰蓝色
//以上三色为PANEL的颜色

#define LIGHTGREEN    0X841F  //浅绿色
#define LGRAY         0XC618  //浅灰色(PANNEL),窗体背景色

#define LGRAYBLUE     0XA651  //浅灰蓝色(中间层颜色)
#define LBBLUE        0X2B12  //浅棕蓝色(选择条目的反色)

//=====================================================================
// ------------------  ASCII字模的数据表 ------------------------
// 码表从0x20~0x7e
//去掉了前32个无法表示的字符
//=====================================================================
const static uint_8  nAsciiDot[] =              // ASCII
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // - -
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x3C,0x3C,0x3C,0x18,0x18,  // -!-
	0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x66,0x66,0x66,0x24,0x00,0x00,0x00,  // -"-
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x36,0x36,0x7F,0x36,0x36,  // -#-
	0x36,0x7F,0x36,0x36,0x00,0x00,0x00,0x00,

	0x18,0x18,0x3E,0x63,0x43,0x03,0x3E,0x60,  // -$-
	0x61,0x63,0x3E,0x18,0x18,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x43,0x63,0x30,0x18,  // -%-
	0x0C,0x06,0x63,0x61,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x36,0x1C,0x6E,0x3B,  // -&-
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x0C,0x0C,0x0C,0x06,0x00,0x00,0x00,  // -'-
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x30,0x18,0x0C,0x0C,0x0C,0x0C,  // -(-
	0x0C,0x0C,0x18,0x30,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0C,0x18,0x30,0x30,0x30,0x30,  // -)-
	0x30,0x30,0x18,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x66,0x3C,0xFF,  // -*-
	0x3C,0x66,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x7E,  // -+-
	0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -,-
	0x00,0x18,0x18,0x18,0x0C,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,  // ---
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -.-
	0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x40,0x60,0x30,0x18,  // -/-
	0x0C,0x06,0x03,0x01,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x73,0x6B,0x6B,  // -0-
	0x67,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x1C,0x1E,0x18,0x18,0x18,  // -1-
	0x18,0x18,0x18,0x7E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x60,0x30,0x18,0x0C,  // -2-
	0x06,0x03,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x60,0x60,0x3C,0x60,  // -3-
	0x60,0x60,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x30,0x38,0x3C,0x36,0x33,0x7F,  // -4-
	0x30,0x30,0x30,0x78,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x03,0x03,0x03,0x3F,0x70,  // -5-
	0x60,0x60,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x06,0x03,0x03,0x3F,0x63,  // -6-
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x63,0x60,0x60,0x30,0x18,  // -7-
	0x0C,0x0C,0x0C,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x3E,0x63,  // -8-
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x7E,0x60,  // -9-
	0x60,0x60,0x30,0x1E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,  // -:-
	0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,  // -;-
	0x00,0x18,0x18,0x0C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x60,0x30,0x18,0x0C,0x06,  // -<-
	0x0C,0x18,0x30,0x60,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x00,  // -=-
	0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x06,0x0C,0x18,0x30,0x60,  // ->-
	0x30,0x18,0x0C,0x06,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x30,0x18,0x18,  // -?-
	0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x3E,0x63,0x63,0x7B,0x7B,  // -@-
	0x7B,0x3B,0x03,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x08,0x1C,0x36,0x63,0x63,0x7F,  // -A-
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x66,  // -B-
	0x66,0x66,0x66,0x3F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x66,0x43,0x03,0x03,0x03,  // -C-
	0x03,0x43,0x66,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1F,0x36,0x66,0x66,0x66,0x66,  // -D-
	0x66,0x66,0x36,0x1F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x66,0x46,0x16,0x1E,0x16,  // -E-
	0x06,0x46,0x66,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x66,0x46,0x16,0x1E,0x16,  // -F-
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x66,0x43,0x03,0x03,0x7B,  // -G-
	0x63,0x63,0x66,0x5C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x7F,0x63,  // -H-
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x18,0x18,0x18,0x18,0x18,  // -I-
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x78,0x30,0x30,0x30,0x30,0x30,  // -J-
	0x33,0x33,0x33,0x1E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x67,0x66,0x36,0x36,0x1E,0x1E,  // -K-
	0x36,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0F,0x06,0x06,0x06,0x06,0x06,  // -L-
	0x06,0x46,0x66,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x77,0x7F,0x7F,0x6B,0x63,  // -M-
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x67,0x6F,0x7F,0x7B,0x73,  // -N-
	0x63,0x63,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x63,0x63,0x63,0x63,  // -O-
	0x63,0x63,0x36,0x1C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x06,  // -P-
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x63,0x63,0x63,  // -Q-
	0x63,0x6B,0x7B,0x3E,0x30,0x70,0x00,0x00,

	0x00,0x00,0x3F,0x66,0x66,0x66,0x3E,0x36,  // -R-
	0x66,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3E,0x63,0x63,0x06,0x1C,0x30,  // -S-
	0x60,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7E,0x7E,0x5A,0x18,0x18,0x18,  // -T-
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x63,  // -U-
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x63,  // -V-
	0x63,0x36,0x1C,0x08,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x63,0x63,0x63,0x6B,  // -W-
	0x6B,0x7F,0x36,0x36,0x00,0x00,0x00,0x00,

	0x00,0x00,0x63,0x63,0x36,0x36,0x1C,0x1C,  // -X-
	0x36,0x36,0x63,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x66,0x66,0x66,0x66,0x3C,0x18,  // -Y-
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x7F,0x63,0x61,0x30,0x18,0x0C,  // -Z-
	0x06,0x43,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,  // -[-
	0x0C,0x0C,0x0C,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x01,0x03,0x07,0x0E,0x1C,  // -\-
	0x38,0x70,0x60,0x40,0x00,0x00,0x00,0x00,

	0x00,0x00,0x3C,0x30,0x30,0x30,0x30,0x30,  // -]-
	0x30,0x30,0x30,0x3C,0x00,0x00,0x00,0x00,

	0x08,0x1C,0x36,0x63,0x00,0x00,0x00,0x00,  // -^-
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // -_-
	0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,

	0x0C,0x0C,0x18,0x00,0x00,0x00,0x00,0x00,  // -`-
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x1E,0x30,0x3E,  // -a-
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x07,0x06,0x06,0x1E,0x36,0x66,  // -b-
	0x66,0x66,0x66,0x3B,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x03,  // -c-
	0x03,0x03,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x38,0x30,0x30,0x3C,0x36,0x33,  // -d-
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x7F,  // -e-
	0x03,0x03,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x36,0x26,0x06,0x0F,0x06,  // -f-
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x6E,0x33,0x33,  // -g-
	0x33,0x33,0x33,0x3E,0x30,0x33,0x1E,0x00,

	0x00,0x00,0x07,0x06,0x06,0x36,0x6E,0x66,  // -h-
	0x66,0x66,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x18,0x00,0x1C,0x18,0x18,  // -i-
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x60,0x60,0x00,0x70,0x60,0x60,  // -j-
	0x60,0x60,0x60,0x60,0x66,0x66,0x3C,0x00,

	0x00,0x00,0x07,0x06,0x06,0x66,0x36,0x1E,  // -k-
	0x1E,0x36,0x66,0x67,0x00,0x00,0x00,0x00,

	0x00,0x00,0x1C,0x18,0x18,0x18,0x18,0x18,  // -l-
	0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x37,0x7F,0x6B,  // -m-
	0x6B,0x6B,0x6B,0x6B,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x66,0x66,  // -n-
	0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x63,  // -o-
	0x63,0x63,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x66,0x66,  // -p-
	0x66,0x66,0x66,0x3E,0x06,0x06,0x0F,0x00,

	0x00,0x00,0x00,0x00,0x00,0x6E,0x33,0x33,  // -q-
	0x33,0x33,0x33,0x3E,0x30,0x30,0x78,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3B,0x6E,0x46,  // -r-
	0x06,0x06,0x06,0x0F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x3E,0x63,0x06,  // -s-
	0x1C,0x30,0x63,0x3E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x08,0x0C,0x0C,0x3F,0x0C,0x0C,  // -t-
	0x0C,0x0C,0x6C,0x38,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x33,0x33,0x33,  // -u-
	0x33,0x33,0x33,0x6E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x66,0x66,0x66,  // -v-
	0x66,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x63,0x63,  // -w-
	0x6B,0x6B,0x7F,0x36,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x36,0x1C,  // -x-
	0x1C,0x1C,0x36,0x63,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x00,0x63,0x63,0x63,  // -y-
	0x63,0x63,0x63,0x7E,0x60,0x30,0x1F,0x00,

	0x00,0x00,0x00,0x00,0x00,0x7F,0x33,0x18,  // -z-
	0x0C,0x06,0x63,0x7F,0x00,0x00,0x00,0x00,

	0x00,0x00,0x70,0x18,0x18,0x18,0x0E,0x18,  // -{-
	0x18,0x18,0x18,0x70,0x00,0x00,0x00,0x00,

	0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x18,  // -|-
	0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,

	0x00,0x00,0x0E,0x18,0x18,0x18,0x70,0x18,  // -}-
	0x18,0x18,0x18,0x0E,0x00,0x00,0x00,0x00,

	0x00,0x00,0x6E,0x3B,0x00,0x00,0x00,0x00,  // -~-
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x00,0x00,0x08,0x1C,0x36,0x63,  // --
	0x63,0x63,0x7F,0x00,0x00,0x00,0x00,0x00,
};

 //=====================================================================
  // 汉字字模表
  // 汉字库: 宋体（16*16） 横向取模右高位,数据排列:从左到右从上到下
  // 汉字表：（共49个，相应于font.h中的ChineseCharacterLength）
  //     金葫芦产品信息通方式
  //     运营商中国移动芯片状
  //     态温度号强当前时间行
  //     年月日模块开始初化成
  //     功发送数据失败提示
  //=====================================================================
#define ChineseCharacterLength (sizeof(GB_16)/sizeof(typFNT_GB16))     //记录汉字的个数
  const static typFNT_GB16  GB_16[] =          // 数据表
  {
  "金", 0x80,0x00,0x80,0x00,0x40,0x01,0x20,0x02,
        0x10,0x04,0x08,0x0A,0xF4,0x77,0x83,0x20,
        0x80,0x00,0xF8,0x0F,0x80,0x00,0x88,0x08,
        0x90,0x04,0xA0,0x12,0xFE,0x3F,0x00,0x00,

  "葫", 0x20,0x02,0x20,0x22,0xFF,0x7F,0x20,0x02,
        0x10,0x3E,0x90,0x22,0xFE,0x23,0x10,0x3E,
        0x50,0x22,0xFC,0x22,0x44,0x3E,0x44,0x22,
        0x44,0x22,0x7C,0x22,0x44,0x29,0x80,0x10,

  "芦", 0x10,0x04,0x10,0x24,0xFF,0x7F,0x10,0x04,
        0x80,0x10,0xFC,0x3F,0x04,0x10,0x04,0x10,
        0xFC,0x1F,0x04,0x10,0x04,0x00,0x04,0x00,
        0x04,0x00,0x02,0x00,0x02,0x00,0x01,0x00,

  "产", 0x40,0x00,0x80,0x00,0x80,0x10,0xFE,0x3F,
        0x10,0x08,0x20,0x04,0x20,0x12,0xF8,0x3F,
        0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,
        0x04,0x00,0x04,0x00,0x02,0x00,0x01,0x00,

  "品", 0x00,0x08,0xF8,0x1F,0x08,0x08,0x08,0x08,
        0x08,0x08,0xF8,0x0F,0x08,0x08,0x40,0x20,
        0xFE,0x7F,0x42,0x21,0x42,0x21,0x42,0x21,
        0x42,0x21,0x42,0x21,0x7E,0x3F,0x42,0x21,

  "信", 0x10,0x01,0x10,0x22,0xF0,0x7F,0x08,0x00,
        0x08,0x10,0xEC,0x3F,0x0A,0x00,0x09,0x10,
        0xE8,0x3F,0x08,0x00,0xC8,0x1F,0x48,0x10,
        0x48,0x10,0x48,0x10,0xC8,0x1F,0x48,0x10,

  "息", 0x40,0x00,0x20,0x08,0xF8,0x1F,0x08,0x08,
        0x08,0x08,0xF8,0x0F,0x08,0x08,0xF8,0x0F,
        0x08,0x08,0x08,0x08,0xF8,0x0F,0x40,0x00,
        0x8A,0x21,0x0A,0x49,0x09,0x48,0xF0,0x0F,

  "通", 0xC0,0x1F,0x02,0x08,0x0C,0x05,0x08,0x12,
        0xC0,0x3F,0x40,0x12,0x4F,0x12,0xC8,0x1F,
        0x48,0x12,0x48,0x12,0xC8,0x1F,0x48,0x12,
        0x48,0x16,0x54,0x0A,0x22,0x60,0xC0,0x3F,

  "方", 0x20,0x00,0xC0,0x00,0x80,0x00,0x00,0x20,
        0xFF,0x7F,0x20,0x00,0x20,0x08,0xE0,0x1F,
        0x20,0x08,0x20,0x08,0x20,0x08,0x10,0x08,
        0x10,0x08,0x08,0x08,0x04,0x05,0x02,0x02,

  "式", 0x00,0x01,0x00,0x05,0x00,0x09,0x00,0x21,
        0xFF,0x7F,0x00,0x01,0x00,0x01,0x7C,0x01,
        0x10,0x01,0x10,0x02,0x10,0x02,0x90,0x04,
        0x70,0x44,0x0E,0x48,0x04,0x50,0x00,0x20,

  "运", 0x00,0x08,0xC2,0x1F,0x0C,0x00,0x08,0x00,
        0x00,0x10,0xE0,0x3F,0x0F,0x01,0x08,0x01,
        0x88,0x00,0x88,0x04,0x48,0x08,0xE8,0x1F,
        0x08,0x10,0x14,0x60,0xE2,0x3F,0x00,0x00,

  "营", 0x20,0x02,0x20,0x12,0xFE,0x3F,0x20,0x02,
        0xFE,0x7F,0x02,0x40,0xF1,0x27,0x10,0x04,
        0x10,0x04,0xF0,0x07,0x00,0x00,0xF8,0x0F,
        0x08,0x08,0x08,0x08,0xF8,0x0F,0x08,0x08,

  "商", 0x40,0x00,0x80,0x20,0xFF,0x7F,0x10,0x04,
        0x20,0x12,0xFC,0x3F,0x04,0x10,0x24,0x12,
        0x14,0x14,0xEC,0x1B,0x24,0x12,0x24,0x12,
        0x24,0x12,0xE4,0x13,0x04,0x14,0x04,0x08,

  "中", 0x80,0x00,0x80,0x00,0x80,0x20,0xFE,0x7F,
        0x82,0x20,0x82,0x20,0x82,0x20,0x82,0x20,
        0xFE,0x3F,0x82,0x20,0x80,0x00,0x80,0x00,
        0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,

  "国", 0x00,0x20,0xFE,0x7F,0x02,0x24,0xFA,0x2F,
        0x82,0x20,0x82,0x20,0x82,0x22,0xF2,0x27,
        0x82,0x20,0x82,0x22,0x82,0x24,0x82,0x20,
        0xFA,0x2F,0x02,0x20,0xFE,0x3F,0x02,0x20,

  "移", 0x10,0x02,0x38,0x02,0x0F,0x3F,0x88,0x21,
        0x48,0x12,0x3F,0x0C,0x08,0x06,0x9C,0x05,
        0x2C,0x7C,0x2A,0x42,0x09,0x23,0x88,0x24,
        0x08,0x18,0x08,0x0C,0x08,0x03,0xE8,0x00,

  "动", 0x00,0x02,0x10,0x02,0x3E,0x02,0x00,0x22,
        0xA0,0x7F,0x7F,0x22,0x08,0x22,0x08,0x22,
        0x04,0x22,0x24,0x22,0x42,0x21,0x7F,0x21,
        0x82,0x20,0x80,0x20,0x40,0x14,0x20,0x08,

  "芯", 0x10,0x04,0x10,0x24,0xFF,0x7F,0x10,0x04,
        0x10,0x04,0x00,0x00,0x40,0x00,0x80,0x00,
        0x0A,0x21,0x0A,0x41,0x0A,0x40,0x09,0x40,
        0x08,0x10,0x08,0x10,0xF0,0x1F,0x00,0x00,

  "片", 0x00,0x01,0x04,0x01,0x04,0x01,0x04,0x01,
        0x04,0x21,0xFC,0x7F,0x04,0x00,0x04,0x00,
        0xFC,0x03,0x04,0x02,0x04,0x02,0x04,0x02,
        0x04,0x02,0x04,0x02,0x02,0x02,0x01,0x02,

  "状", 0x10,0x02,0x10,0x0A,0x10,0x12,0x12,0x02,
        0x14,0x22,0xF4,0x7F,0x10,0x02,0x10,0x02,
        0x18,0x05,0x14,0x05,0x92,0x08,0x93,0x08,
        0x90,0x10,0x50,0x70,0x30,0x20,0x10,0x00,

  "态", 0x80,0x00,0x80,0x20,0xFF,0x7F,0x80,0x00,
        0x40,0x01,0x20,0x02,0x50,0x0C,0x8C,0x70,
        0x03,0x20,0x40,0x00,0x94,0x08,0x94,0x10,
        0x14,0x24,0x12,0x24,0xE0,0x07,0x00,0x00,

  "温", 0x00,0x10,0xC2,0x3F,0x4C,0x10,0x48,0x10,
        0xC1,0x1F,0x46,0x10,0x44,0x10,0xD0,0x1F,
        0x08,0x00,0xE4,0x3F,0x27,0x25,0x24,0x25,
        0x24,0x25,0x24,0x25,0xF4,0x7F,0x04,0x00,

  "度", 0x80,0x00,0x00,0x21,0xFC,0x7F,0x44,0x04,
        0x44,0x14,0xFC,0x3F,0x44,0x04,0xC4,0x07,
        0x04,0x00,0xF4,0x0F,0x44,0x04,0x84,0x02,
        0x04,0x01,0xC2,0x06,0x31,0x78,0x0C,0x20,

  "号", 0x00,0x08,0xF8,0x1F,0x08,0x08,0x08,0x08,
        0x08,0x08,0xF8,0x0F,0x00,0x20,0xFF,0x7F,
        0x20,0x00,0x10,0x08,0xF8,0x1F,0x00,0x08,
        0x00,0x08,0x00,0x08,0x00,0x05,0x00,0x02,

  "强", 0x10,0x20,0xBF,0x7F,0x90,0x20,0x90,0x20,
        0x90,0x3F,0x9E,0x24,0x12,0x04,0xC2,0x7F,
        0x42,0x44,0x5E,0x44,0xD0,0x7F,0x50,0x44,
        0x10,0x04,0x11,0x24,0xCA,0x7F,0x04,0x40,

  "当", 0x80,0x00,0x84,0x10,0x98,0x18,0x90,0x04,
        0x80,0x00,0x80,0x10,0xFE,0x3F,0x00,0x10,
        0x00,0x10,0x00,0x10,0xFC,0x1F,0x00,0x10,
        0x00,0x10,0x00,0x10,0xFE,0x1F,0x00,0x10,

  "前", 0x08,0x08,0x30,0x0C,0x20,0x22,0xFF,0x7F,
        0x00,0x00,0x7C,0x10,0x44,0x12,0x44,0x12,
        0x7C,0x12,0x44,0x12,0x44,0x12,0x7C,0x12,
        0x44,0x10,0x44,0x10,0x54,0x14,0x24,0x08,

  "时", 0x00,0x10,0x20,0x10,0x7E,0x10,0x22,0x10,
        0xE2,0x7F,0x22,0x10,0x22,0x10,0x3E,0x11,
        0x22,0x12,0x22,0x12,0x22,0x10,0x22,0x10,
        0x3E,0x10,0x22,0x12,0x00,0x14,0x00,0x08,

  "间", 0x04,0x20,0xD8,0x7F,0x10,0x20,0x02,0x24,
        0xF2,0x2F,0x12,0x24,0x12,0x24,0x12,0x24,
        0xF2,0x27,0x12,0x24,0x12,0x24,0x12,0x24,
        0xF2,0x27,0x12,0x24,0x02,0x28,0x02,0x10,

  "行", 0x10,0x10,0xD0,0x3F,0x08,0x00,0x04,0x00,
        0x02,0x00,0x10,0x20,0xE8,0x7F,0x0C,0x08,
        0x0A,0x08,0x09,0x08,0x08,0x08,0x08,0x08,
        0x08,0x08,0x08,0x08,0x08,0x0A,0x08,0x04,

  "年", 0x10,0x00,0x10,0x10,0xF8,0x3F,0x88,0x00,
  	0x84,0x00,0x82,0x08,0xF8,0x1F,0x88,0x00,
  	0x88,0x00,0x88,0x20,0xFF,0x7F,0x80,0x00,
  	0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,

  "月", 0x00,0x08,0xF0,0x1F,0x10,0x08,0x10,0x08,
  	0x10,0x08,0xF0,0x0F,0x10,0x08,0x10,0x08,
  	0x10,0x08,0xF0,0x0F,0x10,0x08,0x10,0x08,
  	0x08,0x08,0x08,0x08,0x04,0x0A,0x02,0x04,

  "日", 0x00,0x08,0xF8,0x1F,0x08,0x08,0x08,0x08,
  	0x08,0x08,0x08,0x08,0x08,0x08,0xF8,0x0F,
  	0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,
  	0x08,0x08,0xF8,0x0F,0x08,0x08,0x00,0x00,

  "模", 0x88,0x08,0x88,0x28,0xF8,0x7F,0x88,0x08,
  	  0xBF,0x18,0xC8,0x3F,0x4C,0x10,0xDC,0x1F,
  	  0x6A,0x10,0xCA,0x1F,0x09,0x02,0xF8,0x7F,
  	  0x08,0x02,0x08,0x0D,0x88,0x70,0x68,0x20,

  "块", 0x08,0x01,0x08,0x01,0x08,0x01,0x08,0x11,
  	  0xC8,0x3F,0x3F,0x11,0x08,0x11,0x08,0x11,
  	  0x08,0x11,0xE8,0x7F,0x38,0x01,0x8F,0x02,
  	  0x82,0x04,0x40,0x08,0x20,0x70,0x10,0x20,

  "开", 0x00,0x10,0xFE,0x3F,0x10,0x04,0x10,0x04,
  	  0x10,0x04,0x10,0x04,0x10,0x24,0xFF,0x7F,
  	  0x10,0x04,0x10,0x04,0x10,0x04,0x10,0x04,
  	  0x08,0x04,0x08,0x04,0x04,0x04,0x02,0x04,

  "始", 0x08,0x02,0x08,0x02,0x08,0x02,0x08,0x01,
  	  0x3F,0x11,0xA4,0x20,0xE4,0x7F,0x24,0x40,
  	  0x24,0x20,0x92,0x7F,0x94,0x20,0x88,0x20,
  	  0x94,0x20,0xA2,0x20,0xA1,0x3F,0x80,0x20,

  "初", 0x04,0x00,0x08,0x00,0x08,0x20,0xA0,0x7F,
  	  0x3F,0x22,0x10,0x22,0x08,0x22,0x2C,0x22,
  	  0x1A,0x22,0x29,0x22,0x08,0x22,0x08,0x21,
  	  0x08,0x21,0x88,0x20,0x48,0x14,0x28,0x08,

  "化", 0x10,0x01,0x10,0x01,0x10,0x01,0x08,0x11,
  	  0x08,0x19,0x0C,0x05,0x0A,0x03,0x09,0x01,
  	  0x88,0x01,0x48,0x01,0x28,0x01,0x08,0x01,
  	  0x08,0x41,0x08,0x41,0x08,0x7E,0x08,0x00,

  "成", 0x00,0x01,0x00,0x05,0x00,0x09,0xFC,0x3F,
  	  0x04,0x01,0x04,0x01,0x04,0x21,0x7C,0x22,
  	  0x44,0x12,0x44,0x12,0x44,0x0C,0x54,0x04,
  	  0x24,0x46,0x02,0x49,0x81,0x50,0x00,0x60,

  "功", 0x00,0x01,0x00,0x01,0x10,0x01,0x3F,0x01,
  	  0x08,0x21,0xE8,0x7F,0x08,0x21,0x08,0x21,
  	  0x08,0x21,0x08,0x21,0xB8,0x20,0x8F,0x20,
  	  0x82,0x20,0x40,0x22,0x20,0x14,0x10,0x08,

  "发", 0x80,0x00,0x88,0x04,0x88,0x08,0x84,0x20,
  	  0xFE,0x7F,0x40,0x00,0x40,0x00,0xE0,0x0F,
  	  0x60,0x08,0x50,0x04,0x90,0x02,0x08,0x01,
  	  0x84,0x02,0x42,0x0C,0x31,0x70,0x0C,0x20,

  "送", 0x40,0x10,0x82,0x08,0x0C,0x05,0xE8,0x3F,
  	  0x00,0x02,0x00,0x02,0x0F,0x22,0xF8,0x7F,
  	  0x08,0x02,0x08,0x02,0x08,0x01,0x08,0x05,
  	  0x88,0x18,0x54,0x10,0x22,0x60,0xC0,0x3F,

  "数", 0x10,0x02,0x92,0x02,0x54,0x02,0x10,0x21,
  	  0xFF,0x7F,0x98,0x10,0x34,0x11,0x52,0x11,
  	  0x08,0x11,0x7F,0x09,0x44,0x0A,0x44,0x04,
  	  0x28,0x0A,0x18,0x11,0xA4,0x70,0x42,0x20,

  "据", 0x08,0x20,0xC8,0x7F,0x48,0x20,0x48,0x20,
  	  0xFF,0x3F,0x48,0x04,0x68,0x24,0xD8,0x7F,
  	  0x4C,0x04,0x4B,0x24,0xC8,0x7F,0xA8,0x20,
  	  0xA8,0x20,0xA8,0x20,0x9A,0x3F,0x84,0x20,

  "失", 0x80,0x00,0x88,0x00,0x88,0x00,0x88,0x08,
  	  0xF8,0x1F,0x84,0x00,0x82,0x00,0x80,0x20,
  	  0xFF,0x7F,0x80,0x00,0x40,0x01,0x40,0x01,
  	  0x20,0x02,0x10,0x0C,0x08,0x70,0x06,0x20,

  "败", 0x20,0x02,0x7E,0x02,0x22,0x22,0x2A,0x7E,
  	  0x2A,0x11,0xAA,0x10,0x2A,0x12,0x2A,0x12,
  	  0x2A,0x12,0x2A,0x0A,0x2A,0x0A,0x08,0x04,
  	  0x14,0x0A,0x24,0x71,0xA2,0x20,0x41,0x00,

  "提", 0x08,0x10,0x88,0x3F,0x88,0x10,0x88,0x10,
  	  0xBF,0x1F,0x88,0x10,0xA8,0x10,0x98,0x1F,
  	  0x0C,0x00,0xEB,0x7F,0x08,0x04,0x88,0x14,
  	  0x88,0x3C,0x88,0x04,0x4A,0x65,0x24,0x3E,

  "示", 0x00,0x08,0xFC,0x1F,0x00,0x00,0x00,0x00,
  	  0x00,0x00,0x00,0x20,0xFF,0x7F,0x80,0x00,
  	  0x80,0x00,0x90,0x04,0x98,0x18,0x84,0x30,
  	  0x82,0x20,0x80,0x00,0xA0,0x00,0x40,0x00,

  "你", 0x88,0x00,0x88,0x00,0x88,0x00,0xC4,0x3F,
  	0x44,0x20,0x26,0x10,0x15,0x02,0x04,0x02,
  	0x84,0x0A,0x84,0x12,0x44,0x32,0x24,0x22,
  	0x04,0x02,0x04,0x02,0x84,0x02,0x04,0x01,

  "好", 0x08,0x00,0x88,0x3F,0x08,0x20,0x08,0x10,
  	0x3F,0x08,0x24,0x04,0x24,0x24,0xE4,0x7F,
  	0x24,0x04,0x22,0x04,0x14,0x04,0x08,0x04,
  	0x14,0x04,0x22,0x04,0x21,0x05,0x00,0x02,

  "啊", 0x00,0x20,0xF4,0x7E,0x9F,0x20,0x95,0x20,
  	0x55,0x28,0x55,0x3E,0x35,0x2A,0x55,0x2A,
  	0x55,0x2A,0x95,0x2A,0x97,0x2E,0xB5,0x2A,
  	0x50,0x20,0x10,0x20,0x10,0x28,0x10,0x30,

	"型", 0x80,0x20,0xFE,0x21,0x48,0x24,0x48,0x24,
	      0x48,0x24,0xFF,0x25,0x48,0x24,0x48,0x24,
	      0x48,0x20,0xC4,0x28,0x82,0x10,0xFE,0x3F,
	      0x80,0x00,0x80,0x20,0xFF,0x7F,0x00,0x00,

	"【", 0x00,0x00,0x00,0x00,0xE0,0x0F,0xE0,0x07,
	      0xE0,0x03,0xE0,0x01,0xE0,0x01,0xE0,0x00,
	      0xE0,0x00,0xE0,0x01,0xE0,0x01,0xE0,0x03,
	      0xE0,0x07,0xE0,0x0F,0x00,0x00,0x00,0x00,

	"】", 0x00,0x00,0x00,0x00,0xE0,0x0F,0xC0,0x0F,
	      0x80,0x0F,0x00,0x0F,0x00,0x0F,0x00,0x0E,
	      0x00,0x0E,0x00,0x0F,0x00,0x0F,0x80,0x0F,
	      0xC0,0x0F,0xE0,0x0F,0x00,0x00,0x00,0x00,

	"软", 0x08,0x02,0x08,0x02,0x28,0x02,0x7F,0x3E,
	      0x04,0x21,0x94,0x10,0x12,0x04,0x7E,0x04,
	      0x10,0x04,0x10,0x04,0x70,0x0A,0x1F,0x0A,
	      0x12,0x11,0x10,0x11,0x90,0x60,0x50,0x20,

	"件", 0x08,0x02,0x08,0x02,0x48,0x02,0x44,0x12,
	      0xC4,0x3F,0x26,0x02,0x25,0x02,0x14,0x02,
	      0x04,0x22,0xFC,0x7F,0x04,0x02,0x04,0x02,
	      0x04,0x02,0x04,0x02,0x04,0x02,0x04,0x02,

	"版", 0x10,0x10,0x12,0x38,0x92,0x07,0x92,0x00,
	      0x92,0x00,0xBE,0x3F,0x82,0x20,0x82,0x12,
	      0x9E,0x12,0x92,0x0A,0x92,0x0C,0x52,0x04,
	      0x52,0x0A,0x32,0x71,0x91,0x20,0x10,0x00,

	"本", 0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x10,
	      0xFE,0x3F,0xA0,0x02,0xA0,0x02,0xA0,0x02,
	      0x90,0x04,0x90,0x04,0x88,0x08,0xF4,0x77,
	      0x83,0x20,0x80,0x00,0x80,0x00,0x80,0x00,

	"卡", 0x40,0x00,0x40,0x04,0xC0,0x0F,0x40,0x00,
	      0x40,0x00,0x40,0x20,0xFF,0x7F,0x40,0x00,
	      0x40,0x00,0x40,0x01,0x40,0x06,0x40,0x0C,
	      0x40,0x08,0x40,0x00,0x40,0x00,0x40,0x00,

	"基", 0x10,0x04,0x10,0x14,0xFE,0x3F,0x10,0x04,
	      0xF0,0x07,0x10,0x04,0xF0,0x07,0x10,0x24,
	      0xFF,0x7F,0x20,0x02,0x90,0x0C,0x8C,0x72,
	      0xF3,0x27,0x80,0x00,0x80,0x08,0xFC,0x1F,

	"站", 0x00,0x02,0x04,0x02,0x08,0x22,0x08,0x7E,
	      0x7F,0x02,0x00,0x02,0x22,0x02,0x22,0x22,
	      0xA4,0x7F,0xA4,0x20,0x94,0x20,0x90,0x20,
	      0xF8,0x20,0x87,0x20,0x82,0x3F,0x80,0x20,

  "触", 0x04,0x04,0x04,0x04,0x3C,0x04,0x12,0x24,
		0x8A,0x7F,0xBF,0x24,0xAA,0x24,0xAA,0x24,
		0xBE,0x24,0xAA,0x24,0xAA,0x3F,0xBE,0x04,
		0x2A,0x14,0x2A,0x3C,0xAA,0x47,0x31,0x41,

  "摸", 0x88,0x08,0x88,0x28,0xF8,0x7F,0x88,0x08,
		0xBF,0x18,0xC8,0x3F,0x68,0x10,0xD8,0x1F,
		0x4C,0x10,0xCB,0x1F,0x08,0x02,0xF8,0x7F,
		0x08,0x02,0x08,0x05,0x8A,0x38,0x64,0x10,

"次", 0x00,0x01,0x02,0x01,0x0C,0x01,0x88,0x10,
	0x80,0x3F,0x40,0x10,0x10,0x0A,0x08,0x02,
	0x04,0x02,0x07,0x02,0x04,0x05,0x04,0x05,
	0x84,0x08,0x44,0x10,0x24,0x70,0x14,0x20,

"送", 0x40,0x10,0x82,0x08,0x0C,0x05,0xE8,0x3F,
	  0x00,0x02,0x00,0x02,0x0F,0x22,0xF8,0x7F,
	  0x08,0x02,0x08,0x02,0x08,0x01,0x08,0x05,
	  0x88,0x18,0x54,0x10,0x22,0x60,0xC0,0x3F,

"频", 0x08,0x20,0xC8,0x7F,0x2A,0x04,0x7A,0x22,
	  0x8A,0x7F,0xAA,0x20,0xFF,0x24,0x88,0x24,
	  0xAA,0x24,0xAA,0x24,0xAA,0x24,0xA9,0x24,
	  0x10,0x04,0x08,0x0A,0x04,0x31,0xC2,0x20,

"率", 0x40,0x00,0x80,0x10,0xFE,0x3F,0x80,0x00,
	  0x42,0x22,0xE4,0x11,0x88,0x08,0x44,0x12,
	  0xF2,0x27,0x80,0x04,0x80,0x20,0xFF,0x7F,
	  0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,

"秒", 0x20,0x04,0x70,0x04,0x1E,0x04,0x10,0x04,
	  0x10,0x15,0x7F,0x65,0x10,0x45,0xB8,0x04,
	  0x58,0x24,0x14,0x24,0x14,0x14,0x12,0x08,
	  0x11,0x04,0x10,0x02,0x10,0x01,0xD0,0x00,

	  "接", 0x08,0x01,0x08,0x12,0xE8,0x3F,0x08,0x00,
	        0xBF,0x08,0x08,0x05,0xE8,0x3F,0x18,0x01,
	        0x0C,0x21,0xFB,0x7F,0x08,0x09,0x88,0x08,
	        0x08,0x05,0x08,0x06,0x0A,0x19,0xC4,0x10,

	  "收", 0x10,0x01,0x10,0x01,0x10,0x01,0x12,0x21,
	        0x12,0x7F,0x92,0x10,0x92,0x11,0x52,0x11,
	        0x12,0x11,0x1A,0x0A,0x16,0x0A,0x12,0x04,
	        0x10,0x0A,0x10,0x11,0x90,0x70,0x70,0x20,

	  "计", 0x00,0x02,0x04,0x02,0x08,0x02,0x08,0x02,
	        0x00,0x02,0x00,0x22,0xEF,0x7F,0x08,0x02,
	        0x08,0x02,0x08,0x02,0x08,0x02,0x48,0x02,
	        0x28,0x02,0x18,0x02,0x08,0x02,0x00,0x02,

	"未", 0x80,0x00,0x80,0x00,0x80,0x10,0xFE,0x3F,
		  0x80,0x00,0x80,0x00,0x80,0x20,0xFF,0x7F,
		  0xC0,0x01,0xA0,0x02,0x90,0x04,0x88,0x08,
		  0x84,0x70,0x82,0x20,0x80,0x00,0x80,0x00,

	"到", 0x80,0x20,0xFE,0x21,0x10,0x20,0x08,0x24,
		  0x44,0x24,0x82,0x24,0xFE,0x25,0x10,0x25,
		  0x50,0x24,0xFE,0x24,0x10,0x24,0x10,0x24,
		  0x10,0x20,0xF0,0x21,0x1F,0x28,0x00,0x10,

	"命", 0x80,0x00,0x80,0x00,0x40,0x01,0x20,0x02,
		  0x10,0x0C,0xFC,0x7F,0x03,0x10,0x7C,0x3F,
		  0x44,0x11,0x44,0x11,0x44,0x11,0x44,0x13,
		  0x7C,0x15,0x44,0x09,0x00,0x01,0x00,0x01,

	"令", 0x80,0x00,0x80,0x00,0x40,0x01,0x20,0x02,
		  0x50,0x04,0x88,0x08,0x84,0x70,0x03,0x20,
		  0xF8,0x0F,0x00,0x08,0x00,0x04,0x20,0x02,
		  0x40,0x01,0x80,0x00,0x00,0x01,0x00,0x01
  };


#endif

